[server]
host: 0.0.0.0
port: 7125

[file_manager]
enable_object_processing: True

[data_store]
temperature_store_size: 600
gcode_store_size: 1000



[authorization]
trusted_clients:
    10.0.0.0/8
    127.0.0.0/8
    169.254.0.0/16
    172.16.0.0/12
    192.168.0.0/16
    FE80::/10
    ::1/128
cors_domains:
    *.lan
    *.local
    *://my.mainsail.xyz
    *://app.fluidd.xyz

[octoprint_compat]

[history]

[update_manager]
channel: dev

[update_manager mainsail]
type: web
channel: beta
repo: meteyou/mainsail
path: ~/mainsail

#[update_manager fluidd]
#type: web
#repo: cadriel/fluidd
#path: ~/fluidd


#[update_manager client moonraker-telegram]
#type: git_repo
#path: /home/pi/moonraker-telegram
#origin: https://github.com/Raabi91/moonraker-telegram.git
#env: /home/pi/.moonraker-telegram-env/bin/python
#requirements: scripts/moonraker-telegram-requirements.txt
#install_script: scripts/install.sh

[update_manager client z_calibration]
type: git_repo
path: /home/pi/klipper_z_calibration
origin: https://github.com/protoloft/klipper_z_calibration.git
install_script: install.sh


[update_manager timelapse]
type: git_repo
primary_branch: main
path: ~/moonraker-timelapse
origin: https://github.com/mainsail-crew/moonraker-timelapse.git
managed_services: klipper moonraker



# Currently it isn't necessary to add the `managed_services` option to specify that a service
# restart itself, however it will be required in the future, thus it is recommended to make this
# change now
[update_manager KlipperScreen]
type: git_repo
path: ~/KlipperScreen
origin: https://github.com/jordanruthe/KlipperScreen.git
env: ~/.KlipperScreen-env/bin/python
requirements: scripts/KlipperScreen-requirements.txt
install_script: scripts/KlipperScreen-install.sh
managed_services: KlipperScreen

# Auskommentier wegen Update Manager Update 03.07.2022
#[update_manager KlipperScreen]
#type: git_repo
#path: /home/pi/KlipperScreen
#origin: https://github.com/jordanruthe/KlipperScreen.git
#env: /home/pi/.KlipperScreen-env/bin/python
#requirements: scripts/KlipperScreen-requirements.txt
#install_script: scripts/KlipperScreen-install.sh


[update_manager klipper-mcu-update]
type: git_repo
origin: https://github.com/Klipper3d/klipper.git
path: ~/klipper



[timelapse]
##   Following basic configuration is default to most images and don't need
##   to be changed in most scenarios. Only uncomment and change it if your
##   Image differ from standart installations. In most common scenarios 
##   a User only need [timelapse] in there configuration.
#output_path: ~/timelapse/
##   Directory where the generated video will be saved
#frame_path: /tmp/timelapse/
##   Directory where the temporary frames are saved
#ffmpeg_binary_path: /usr/bin/ffmpeg
##   Directory where ffmpeg is installed

#PH timelapse ab hier bis update manager
#[timelapse] 
#enabled: True
##   If this set to False the Gcode macros are ignored and
##   the autorender is disabled at the end of the print.
##   The idea is to disable the plugin by default and only activate 
##   it during runtime via the http endpoint if a timelapse is desired.
#autorender: True
##   If this is set to False, the autorender is disabled at the end of the print.
#constant_rate_factor: 23
##   The range of the CRF scale is 0–51, where 0 is lossless,
##   23 is the default, and 51 is worst quality possible. 
##   A lower value generally leads to higher quality, and a 
##   subjectively sane range is 17–28.
##   more info: https://trac.ffmpeg.org/wiki/Encode/H.264
#output_framerate: 24
##   Output framerate of the generated video
#output_path: ~/timelapse/
##   Path where the generated video will be saved
#frame_path: /tmp/timelapse/
##   Path where the temporary frames are saved
#time_format_code: %Y%m%d_%H%M
##   Manipulates datetime format of the output filename
##   see: https://docs.python.org/3/library/datetime.html#strftime-and-strptime-format-codes
#snapshoturl: http://localhost:8080/?action=snapshot
##   url to your webcamstream
#pixelformat: yuv420p
##   set pixelformat for output video
##   default to yuv420p because eg. yuvj422p will not play on 
##   on most smartphones or older media players
#extraoutputparams: 
##   here you can extra output parameters to FFMPEG 
##   further info: https://ffmpeg.org/ffmpeg.html 
##   eg rotate video by 180° "-vf transpose=2,transpose=2"
##   or repeat last frame for 5 seconds:
##   -filter_complex "[0]trim=0:5[hold];[0][hold]concat[extended];[extended][0]overlay"
