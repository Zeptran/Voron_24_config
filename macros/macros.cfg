[gcode_shell_command backup_cfg]
command: sh /home/pi/autocommit.sh
timeout: 30.
verbose: True

[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg


[gcode_macro DISSABLE_STEPPERS]
gcode:
  M18
  {action_respond_info("Steppers turned off")}

# Park front for maintenance / cleaning
[gcode_macro PARKFRONT]
gcode:
  {% if printer.idle_timeout.state != "Printing" %}
    CG28                           ; Home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                            ; absolute coords
    G1 Z100 X130 Y10 F5000         ; Move to position
    RESTORE_GCODE_STATE NAME=PARKFRONT
  {% else %}
    { action_respond_info("PARKFRONT disabled while printing!") }
  {% endif %}


# Park bed for heatsoaking
[gcode_macro PARK]
#default_parameter_FORCE: 0
gcode:
  {% if printer.idle_timeout.state != "Printing" or FORCE|int == 1 %}
    CG28                           ; Home if not already homed
    SAVE_GCODE_STATE NAME=PARK
    G90                            ; absolute positioning
    G0 X150 Y150 Z30 F5000        ; Move to position
    RESTORE_GCODE_STATE NAME=PARK
  {% else %}
    { action_respond_info("PARK disabled while printing!") }
  {% endif %}



[gcode_macro PURGE_LINE]
#   A purge line on the left of the bed to prime the extruder
gcode:
    G90
    G92 E0                         ; zero/reset extruder
    G1 X2.2 Y20 Z0.3 F18000        ; move to start position
    G1 E+15 F150              ;    extrude to put the pressure (-20 from purge macro)
    G92 E0

    G1 X2.2 Y200 Z0.25 F1500 E10    ; extrude the first line
    G1 X2.5 Y200 Z0.3 F18000       ; move to side a little
    G1 X2.5 Y20 Z0.25 F1500.0 E20   ; extrude the second line
    G92 E0                         ; zero/reset extruder
    G1 Z2.0 E-0.1 F3000              ; move nozzle up and retract tiny bit
    G92 E0 

#[gcode_shell_command backup_config]
#command: sh /home/pi/backup.sh
#timeout: 30.
#verbose: True

#[gcode_macro BACKUP_CONFIG]
#gcode:
#    RUN_SHELL_COMMAND CMD=backup_config

[gcode_macro Nevermore_FAN_ON]
gcode:
    SET_FAN_SPEED FAN=nevermore SPEED=0.55

[gcode_macro Nevermore_FAN_OFF]
gcode:
    SET_FAN_SPEED FAN=nevermore SPEED=0


[gcode_macro NEVERMORE]
gcode:
    {% set nevermore_speed = params.NEVERMORE_Speed|default(0.5)|float %}
   
    SET_FAN_SPEED FAN=nevermore SPEED={nevermore_speed}


[delayed_gcode DISABLE_EXHAUST_FAN]
gcode:
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0
    SET_FAN_SPEED FAN=nevermore SPEED=0


[gcode_macro SPEEDTEST]
gcode:
    # Parameters
    {% set i = params.I|default(1)|int %}

    SAVE_GCODE_STATE NAME=SPEEDTEST
    G28 X Y
    GET_POSITION
    G90                              ; absolute positioning
    {% for iteration in range(i|int) %}
        G1 X0 Y10 F99999
        G1 X290 Y290 F99999
        G1 X0 Y10 F99999
        G1 X290 Y290 F99999

        G1 X0 Y290 F99999

        G1 X290 Y10 F99999
        G1 X0 Y290 F99999
        G1 X290 Y10 F99999
        G1 X0 Y290 F99999

        G1 X0 Y10 F99999
        G1 X290 Y10 F99999
        G1 X290 Y290 F99999
        G1 X0 Y290 F99999
        G1 X0 Y10 F99999
    {% endfor %}
    G28 X Y
    GET_POSITION
    RESTORE_GCODE_STATE NAME=SPEEDTEST



## This macro stores the variables
## must be added to PRINT_END - CANCEL_PRINT Macro 
## works only with the use of virtual sd card!
[gcode_macro _ADD_PRINT_TIME]
description: Helper: Store print time values in variables
gcode:
  ##### get saved values or initiate if not exist #####
  {% if not printer.save_variables.variables.totalprintingtime %}
    {% set totaltime = 0 %} 
  {% else %}
    {% set totaltime = printer.save_variables.variables.totalprintingtime %}
  {% endif %}
  {% if not printer.save_variables.variables.lastservicetime %}
    {% set lastservice = 0 %} 
  {% else %}
    {% set lastservice = printer.save_variables.variables.lastservicetime %}
  {% endif %}
  {% if not printer.save_variables.variables.filament_used %}
    {% set filament = 0.0 %}
  {% else %}
    {% set filament = printer.save_variables.variables.filament_used|float %}
  {% endif %}
  {% if not printer.save_variables.variables.filterusetime %}
    {% set filteruse = 0.0 %}
  {% else %}
    {% set filteruse = printer.save_variables.variables.filterusetime|float %}
  {% endif %}
  {% if not printer.save_variables.variables.exhaustusetime %}
    {% set exhaustuse = 0.0 %}
  {% else %}
    {% set exhaustuse = printer.save_variables.variables.exhaustusetime|float %}
  {% endif %}
  ##### get values of current print #####
  {% set currenttime = printer.print_stats.total_duration %}
  {% set currentprint = printer.print_stats.filament_used|float %}
  ##### Save new values #####
  SAVE_VARIABLE VARIABLE=totalprintingtime VALUE={(totaltime + currenttime)|int}
  SAVE_VARIABLE VARIABLE=lastservicetime VALUE={(lastservice + currenttime)|int}
  SAVE_VARIABLE VARIABLE=filterusetime VALUE={(filteruse + currenttime)|int}
  SAVE_VARIABLE VARIABLE=exhaustusetime VALUE={(exhaustuse + 180)|int}
  SAVE_VARIABLE VARIABLE=filament_used VALUE={(filament + currentprint)|float}
  _DISPLAY_PRINT_TIME PREFIX=Took SECONDS={currenttime}

[gcode_macro _DISPLAY_PRINT_TIME]
description: Helper: Print actual stored print time
gcode:
  # set default parameter value
  {% set totaltime = params.SECONDS|default(-1)|int %}
  {% set prefix = params.PREFIX|default(Total) %}
  {% if totaltime == -1 %}
    {% set totaltime = printer.save_variables.variables.totalprintingtime %}
  {% endif %}
  {% set hours = (totaltime / 3600)|int %}
  {% set minutes = ((totaltime / 60) % 60)|int %}
  {% set seconds = (totaltime % 60)|int %}
  {action_respond_info("Print time %s %d:%02d:%02d" % (prefix|string,hours|int,minutes|int,seconds|int))}
  M117 {prefix} {hours}:{'%02d' % (minutes|int)}:{'%02d' % (seconds|int)}
  #UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10

[gcode_macro _SD_PRINT_STATS]
description: Helper: Print statistic of last print
gcode:
  ## output of data of the last print
  ## used at PRINT_END and CANCEL_PRINT
  {% set PT = printer.print_stats.print_duration %}
  {% set Ph = (PT / 3600)|int %}
  {% set Pm = ((PT / 60) % 60)|int %}
  {% set Ps = (PT % 60)|int %}
  {% set TT = printer.print_stats.total_duration %}
  {% set Th = (TT / 3600)|int %}
  {% set Tm = ((TT / 60) % 60)|int %}
  {% set Ts = (TT % 60)|int %}
  {% set Fil = printer.print_stats.filament_used|float / 1000.0 %}
  {action_respond_info("Statistic of last Print (%s):
                        Name: %s
                        Filament: %.4fm
                        Print Time: %d:%02d:%02d
                        Total Time: %d:%02d:%02d" %
  (params.R, printer.print_stats.filename, Fil, Ph|int, Pm|int, Ps|int, Th|int, Tm|int, Ts|int))}
  

[gcode_macro _SD_PRINTER_STATS]
description: Helper: Print statistic of printer
gcode:
  ## output data of the stoared statis
  ## use e.g at PRINT_END and CANCEL_PRINT
  {% set ST= printer.save_variables.variables.lastservicetime %}
  {% set Sh = (ST / 3600)|int %}
  {% set Sm = ((ST / 60) % 60)|int %}
  {% set Ss = (ST % 60)|int %}
  {% set TT = printer.save_variables.variables.totalprintingtime %}
  {% set Th = (TT / 3600)|int %}
  {% set Tm = ((TT / 60) % 60)|int %}
  {% set Ts = (TT % 60)|int %}
  {% set FT = printer.save_variables.variables.filterusetime %}
  {% set Fh = (FT / 3600)|int %}
  {% set Fm = ((FT / 60) % 60)|int %}
  {% set Fs = (FT % 60)|int %}
  {% set ET = printer.save_variables.variables.exhaustusetime %}
  {% set Eh = (ET / 3600)|int %}
  {% set Em = ((ET / 60) % 60)|int %}
  {% set Es = (ET % 60)|int %}
  {% set Fil = printer.save_variables.variables.filament_used|float / 1000.0 %}
  {action_respond_info("Printer Statistics:
                        Total Print Time: %d:%02d:%02d
                        Total Filament used: %.4fm
                        Filter use time: %d:%02d:%02d
                        Exhaust use time: %d:%02d:%02d
                        Time since last Service: %d:%02d:%02d" %
  (Th|int, Tm|int, Ts|int, Fil, Fh|int, Fm|int, Fs|int, Eh|int, Em|int, Es|int, Sh|int, Sm|int, Ss|int))}
  {% if printer['gcode_macro _USER_VARIABLE'].filter|lower == 'true' %} 
    UPDATE_DELAYED_GCODE ID=_CHECK_FILTER DURATION=1
  {% endif %}
  
[delayed_gcode _CHECK_FILTER]
#initial_duration: 5
gcode:
  {% if printer['gcode_macro _USER_VARIABLE'].filter|lower == 'true' %}
    ## Micro need exchange every 80h
    {% set Fh = (printer.save_variables.variables.filterusetime / 3600)|int %}
    {% if Fh|int >= printer['gcode_macro _USER_VARIABLE'].filter_use_time|int %}
      M117 Change Filter!
      {action_respond_info("Change Filter material at Micro!")}
      UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
    {% endif %}
  {% endif %}  
  
[gcode_macro RST_FILTER]
description: Reset Nevermore interval time
gcode:
  SAVE_VARIABLE VARIABLE=filterusetime VALUE=0
  {action_respond_info("Flter used time reseted to zero")}
  
[gcode_macro RST_SERVICE]
description: Reset Service interval time
gcode:
  SAVE_VARIABLE VARIABLE=lastservicetime VALUE=0
  {action_respond_info("Time since last service reseted to zero")}
